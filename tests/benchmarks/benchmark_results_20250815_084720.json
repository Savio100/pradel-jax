{
  "performance_quick": {
    "module": "test_optimization_performance",
    "success": true,
    "duration": 33.87365433300147,
    "stdout": "2025-08-15 08:47:21,998 - ModelRegistry - \u001b[32mINFO\u001b[0m - Registered model: pradel -> PradelModel\n============================= test session starts ==============================\nplatform darwin -- Python 3.11.7, pytest-8.3.5, pluggy-1.6.0 -- /Users/cchizinski2/.pyenv/versions/3.11.7/bin/python\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-6.2.1, mock-3.14.1, langsmith-0.3.45, benchmark-5.1.0, asyncio-1.0.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 5 items / 4 deselected / 1 selected\n\ntests/benchmarks/test_optimization_performance.py::TestOptimizationPerformance::test_strategy_comparison_simple_model 2025-08-15 08:47:25,256 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Detected format: RMarkFormatAdapter\n2025-08-15 08:47:25,256 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Processing data with RMarkFormatAdapter\n2025-08-15 08:47:25,548 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Processed data: 294 individuals, 7 occasions, 2 covariates\n2025-08-15 08:47:25,549 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~1, p=~1, f=~1\n2025-08-15 08:47:25,549 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~sex, p=~sex, f=~1\n2025-08-15 08:47:25,549 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~sex, p=~sex, f=~sex\n\n=== Simple Model Strategy Performance ===\nscipy_lbfgs  | Time: 1.727\u00b10.254s | Success: 50.0% | AIC: inf\nscipy_slsqp  | Time: 1.403\u00b10.046s | Success: 50.0% | AIC: inf\njax_adam     | Time: 6.264\u00b10.222s | Success: 50.0% | AIC: inf\nmulti_start  | Time: 0.003\u00b10.001s | Success: 0.0% | AIC: inf\nPASSED\n\n=============================== warnings summary ===============================\npradel_jax/config/settings.py:63\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:63: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('cache_directory', pre=True)\n\npradel_jax/config/settings.py:82\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:82: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('max_workers', pre=True)\n\npradel_jax/config/settings.py:111\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:111: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('log_file', pre=True)\n\n../../../../../.pyenv/versions/3.11.7/lib/python3.11/site-packages/pydantic/_internal/_config.py:323\n  /Users/cchizinski2/.pyenv/versions/3.11.7/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n================= 1 passed, 4 deselected, 4 warnings in 31.73s =================\n",
    "stderr": "/Users/cchizinski2/.pyenv/versions/3.11.7/lib/python3.11/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
    "return_code": 0
  },
  "memory_quick": {
    "module": "test_memory_performance",
    "success": true,
    "duration": 6.623669541993877,
    "stdout": "2025-08-15 08:47:55,877 - ModelRegistry - \u001b[32mINFO\u001b[0m - Registered model: pradel -> PradelModel\n============================= test session starts ==============================\nplatform darwin -- Python 3.11.7, pytest-8.3.5, pluggy-1.6.0 -- /Users/cchizinski2/.pyenv/versions/3.11.7/bin/python\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-6.2.1, mock-3.14.1, langsmith-0.3.45, benchmark-5.1.0, asyncio-1.0.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 5 items / 4 deselected / 1 selected\n\ntests/benchmarks/test_memory_performance.py::TestMemoryPerformance::test_memory_usage_by_strategy 2025-08-15 08:47:58,802 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Detected format: RMarkFormatAdapter\n2025-08-15 08:47:58,802 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Processing data with RMarkFormatAdapter\n2025-08-15 08:47:58,971 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Processed data: 294 individuals, 7 occasions, 2 covariates\n2025-08-15 08:47:58,971 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~1, p=~1, f=~1\n\n=== Memory Usage by Strategy ===\nlbfgs    | Peak: 1.5MB | Delta: +54.6MB | Success: False\nslsqp    | Peak: 0.0MB | Delta: +0.0MB | Success: False\nadam     | Peak: 0.0MB | Delta: +0.0MB | Success: False\nPASSED\n\n=============================== warnings summary ===============================\npradel_jax/config/settings.py:63\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:63: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('cache_directory', pre=True)\n\npradel_jax/config/settings.py:82\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:82: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('max_workers', pre=True)\n\npradel_jax/config/settings.py:111\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:111: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('log_file', pre=True)\n\n../../../../../.pyenv/versions/3.11.7/lib/python3.11/site-packages/pydantic/_internal/_config.py:323\n  /Users/cchizinski2/.pyenv/versions/3.11.7/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n================= 1 passed, 4 deselected, 4 warnings in 4.56s ==================\n",
    "stderr": "/Users/cchizinski2/.pyenv/versions/3.11.7/lib/python3.11/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
    "return_code": 0
  },
  "convergence_quick": {
    "module": "test_convergence_analysis",
    "success": false,
    "duration": 5.098010125017026,
    "stdout": "2025-08-15 08:48:02,216 - ModelRegistry - \u001b[32mINFO\u001b[0m - Registered model: pradel -> PradelModel\n============================= test session starts ==============================\nplatform darwin -- Python 3.11.7, pytest-8.3.5, pluggy-1.6.0 -- /Users/cchizinski2/.pyenv/versions/3.11.7/bin/python\ncachedir: .pytest_cache\nbenchmark: 5.1.0 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\nrootdir: /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax\nconfigfile: pytest.ini\nplugins: anyio-4.9.0, cov-6.2.1, mock-3.14.1, langsmith-0.3.45, benchmark-5.1.0, asyncio-1.0.0\nasyncio: mode=Mode.STRICT, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollecting ... collected 7 items / 6 deselected / 1 selected\n\ntests/benchmarks/test_convergence_analysis.py::TestConvergenceAnalysis::test_lbfgs_convergence_stability 2025-08-15 08:48:05,076 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Detected format: RMarkFormatAdapter\n2025-08-15 08:48:05,076 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Processing data with RMarkFormatAdapter\n2025-08-15 08:48:05,199 - pradel_jax.data.adapters - \u001b[32mINFO\u001b[0m - Processed data: 294 individuals, 7 occasions, 2 covariates\n2025-08-15 08:48:05,199 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~1, p=~1, f=~1\n2025-08-15 08:48:05,199 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~sex, p=~1, f=~1\n2025-08-15 08:48:05,199 - FormulaParser - \u001b[32mINFO\u001b[0m - Created model spec 'unnamed': phi=~sex, p=~sex, f=~sex\n\n=== L-BFGS-B Convergence Stability ===\nSuccess rate: 0.0%\nTime consistency: 0.039\u00b10.110s\nFAILED\n\n=================================== FAILURES ===================================\n___________ TestConvergenceAnalysis.test_lbfgs_convergence_stability ___________\ntests/benchmarks/test_convergence_analysis.py:250: in test_lbfgs_convergence_stability\n    assert result['success_rate'] >= 0.8, f\"Poor convergence rate: {result['success_rate']:.1%}\"\nE   AssertionError: Poor convergence rate: 0.0%\nE   assert np.float64(0.0) >= 0.8\n=============================== warnings summary ===============================\npradel_jax/config/settings.py:63\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:63: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('cache_directory', pre=True)\n\npradel_jax/config/settings.py:82\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:82: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('max_workers', pre=True)\n\npradel_jax/config/settings.py:111\n  /Users/cchizinski2/Documents/git2/student_work/ava_britton/pradel-jax/pradel_jax/config/settings.py:111: PydanticDeprecatedSince20: Pydantic V1 style `@validator` validators are deprecated. You should migrate to Pydantic V2 style `@field_validator` validators, see the migration guide for more details. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    @validator('log_file', pre=True)\n\n../../../../../.pyenv/versions/3.11.7/lib/python3.11/site-packages/pydantic/_internal/_config.py:323\n  /Users/cchizinski2/.pyenv/versions/3.11.7/lib/python3.11/site-packages/pydantic/_internal/_config.py:323: PydanticDeprecatedSince20: Support for class-based `config` is deprecated, use ConfigDict instead. Deprecated in Pydantic V2.0 to be removed in V3.0. See Pydantic V2 Migration Guide at https://errors.pydantic.dev/2.11/migration/\n    warnings.warn(DEPRECATION_MESSAGE, DeprecationWarning)\n\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\n=========================== short test summary info ============================\nFAILED tests/benchmarks/test_convergence_analysis.py::TestConvergenceAnalysis::test_lbfgs_convergence_stability\n================= 1 failed, 6 deselected, 4 warnings in 3.37s ==================\n",
    "stderr": "/Users/cchizinski2/.pyenv/versions/3.11.7/lib/python3.11/site-packages/pytest_asyncio/plugin.py:208: PytestDeprecationWarning: The configuration option \"asyncio_default_fixture_loop_scope\" is unset.\nThe event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: \"function\", \"class\", \"module\", \"package\", \"session\"\n\n  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))\n",
    "return_code": 1
  }
}